{
    "registration": {
        "description": "Username and password authentication is a type of <b>knowledge-based</b> authentication. This is because the user is authenticated based on something they know (i.e., their username and password).",
        "advantages": {
            "Simplicity": "Username and password authentication is straightforward and easy to implement. Most users are familiar with this method, making it user-friendly.",
            "Compatibility": "This method is compatible with almost all systems and platforms.",
            "No Special Hardware Required": "Unlike biometric or token-based authentication, username and password authentication doesn't require any special hardware."
        },
        "disadvantages": {
            "Vulnerability to Attacks": "If a malicious party obtains a user's credentials (through phishing, brute force attacks, etc.), they can impersonate the user.",
            "Password Management": "Users often have multiple accounts and remembering all the passwords can be challenging. This leads to practices like password reuse or simple passwords, both of which are security risks.",
            "Lack of Inherent Multi-Factor Authentication": "Username and password authentication only covers one authentication factor (something the user knows). For more secure environments, multi-factor authentication methods (which might include something the user has, like a token, or something the user is, like a fingerprint) are recommended."
        },
        "notes": ["<p><b>Length</b>: The length of a password is crucial because it directly affects the password's entropy, which is a measure of its unpredictability. Each additional character that you add to your password increases the entropy exponentially, making the password harder to crack.</p><p><b>Complexity</b>: Complexity refers to the variety of characters used in the password. By using a mix of uppercase and lowercase letters, numbers, and symbols, you increase the number of possible combinations, which increases the password's entropy.</p><p>The concept of <b>Entropy Space</b> refers to the total number of possible combinations that can be made with a given set of characters. The larger the entropy space, the longer it takes to crack.</p>",
                  "<p><b>Hashing</b>: Hashing is a process that takes an input and returns a fixed-size string of bytes. The output is typically a 'digest' that is unique to each unique input. It's a one-way function, meaning that the original input cannot be easily retrieved from the hash. This is crucial for security because even if the hash is compromised, the original password cannot be easily obtained.</p><p><b>Salting</b>: A salt is a random piece of data that is used as an additional input to the hashing function. The primary purpose of a salt is to defend against dictionary attacks or attacks against hashed passwords using rainbow tables (pre-computed tables for reversing hash functions). By adding a unique salt to each user's password, you ensure that even if two users have the same password, their hashes will be different.</p>"]
    },
    "authentication": {
        "description": "<b>Authentication</b> is a process used to verify the identity of a user, particularly in the context of a username and password system. When a user enters their username and password, the system checks these credentials against its stored data.",
        "usability": {
            "Easy to Learn": "YES",
            "Infrequent Errors": "Quasi-YES",
            "Scalable for Users": "NO",
            "Easy Recovery": "YES",
            "Nothing to Carry": "YES"
        },
        "notes": ["<p><b>Offline Guessing Attacks</b>: Offline guessing attacks occur when an attacker has obtained a copy of the hashed password data from a system. This could happen through a data breach or if the attacker has gained access to the system's password storage. The attacker then attempts to guess the passwords offline, without interacting with the system. They do this by hashing each guess and comparing it to the stored hashes.</p><p><b>Online Guessing Attacks</b>: An online guessing attack is a type of cyber attack where an attacker tries to guess a user's credentials by repeatedly attempting to log in with different combinations. This is typically done through a script or bot that automates the guessing process. The attack continues until the correct credentials are found or until the system locks the account due to too many failed attempts. Systems can defend against online guessing attacks by implementing measures such as account lockouts, CAPTCHAs, or two-factor authentication.</p>",
                  "<p><b>Anti-Hammering Defense</b>: Anti-hammering is a security measure implemented in systems like the Trusted Platform Module (TPM). It's designed to protect against repeated attempts to access or manipulate the system, often used in brute force attacks. If the system detects multiple failed attempts in a short period of time, it can trigger a lockout, preventing further attempts for a certain period of time. This makes it much harder for an attacker to guess the correct credentials through repeated trials.</p>"]
    }
}