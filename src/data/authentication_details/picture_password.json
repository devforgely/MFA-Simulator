{
    "registeration": {
        "description": "Picture password authentication is a type of <b>knowledge-based</b> authentication. This is because the user is authenticated based on something they know (i.e., the sequence of pictures).",
        "advantages": {
            "Memorability": "Humans tend to remember images better than words, making picture passwords easier to remember.",
            "Resistance to Dictionary Attacks": "Unlike text-based passwords, picture passwords are not vulnerable to dictionary attacks",
            "Reduced Shoulder Surfing Risk": "Since the password is based on images, it's harder for someone to observe you entering it over your shoulder compared to typing a text password."
        },
        "disadvantages": {
            "Limited Image Sets": "If the system uses a limited set of images, attackers may be able to statistically guess common sequences.",
            "Time-Consuming": "Selecting and confirming images can take longer than typing a text password.",
            "Potential for User Error": "Users may forget the specific sequence of images they chose, leading to failed login attempts."
        },
        "notes": ["<p><b>Types</b>: Graphical passwords techniques are classified into two main categories: recognition based and recall based graphical techniques.<p><b>Recognition-Based Techniques</b>: In recognition-based techniques, the user is authenticated by identifying images that they had selected during the registration stage. The user is presented with a set of images, and they pass the authentication by recognising and identifying the images they selected. An example of this is the Passfaces system, where the graphical password scheme is based on recognizing human faces.<p><b>Recall-Based Techniques</b>: Recall-based techniques require the user to reproduce something that they created or selected during the registration stage. These techniques are occasionally referred to as drawmetric systems because users recall and reproduce a secret drawing.",
                  "<p><b>Cipher Block Chaining (CBC)</b>: In picture password system, the images can be encoded and divided into blocks, and each block is XORed with the previous ciphertext block before being encrypted. This process ensures that each encrypted block depends on all the blocks processed up to that point, thereby increasing the complexity of the encrypted data.</p>"]
    },
    "authentication": {
        "description": "<b>Authentication</b> is a process used to confirm the identity of a user, particularly in the context of a picture password system. When a user selects a picture as their password during the registration phase, the system generates a unique representation of this picture, which could be a hash or a set of features extracted from the image. This representation is stored securely on the server.<p>The user can prove their identity by demonstrating knowledge of a secret (the picture password) without revealing the secret itself using Challenge-Response Authentication Protocols.</p>",
        "usability": {
            "Easy to Learn": "YES",
            "Infrequent Errors": "Quasi-YES",
            "Scalable for Users": "NO",
            "Easy Recovery": "YES",
            "Nothing to Carry": "YES"
        },
        "notes": ["<p><b>Challenge</b>: The verifying entity (often a server) sends a unique, random challenge to the entity trying to authenticate itself (often a client).</p><p><b>Response</b>: The client uses a secret (like a password) that both the client and server know to compute a response. This is typically done by applying a cryptographic function to the combination of the challenge and the secret.</p><p><b>Verification</b>: The client sends the response back to the server. The server then performs the same cryptographic operation on the received challenge with its stored secret. If the computed value matches the response from the client, the server can confirm the client's identity.</p><p>This protocol is designed to prevent replay attacks. Since the challenge is unique and random for each session, capturing the challenge and response from one session will not help an attacker in future sessions.</p>",
                  "<p><b>Server Compromise</b>: If an attacker gains access to the server, they could obtain the stored secrets. This could allow them to impersonate any user. To mitigate this risk, secrets should be stored securely, such as by using salted hashes or other secure password storage methods.</p><p><b>Man-in-the-Middle Attacks</b>: An attacker could intercept the challenge and response to impersonate the client during the session. Secure communication channels and additional security measures, like using Transport Layer Security (TLS), can help prevent this.</p>"]
    }
}